# Jekyll workflow for deploying to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          cache-version: 0
      - name: Install dependencies
        run: bundle install
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Remove backup directory
        run: rm -rf _backup
      - name: Generate dynamic archive and category pages
        run: |
          # Create archive directories and pages for each year
          mkdir -p archive
          for year in $(grep -h "^date:" _posts/*.md | sed 's/date: //' | cut -d'-' -f1 | sort -u); do
            mkdir -p "archive/$year"
            echo "---" > "archive/$year/index.md"
            echo "layout: archive" >> "archive/$year/index.md"
            echo "year: \"$year\"" >> "archive/$year/index.md"
            echo "title: $year Archive" >> "archive/$year/index.md"
            echo "permalink: /archive/$year/" >> "archive/$year/index.md"
            echo "---" >> "archive/$year/index.md"
          done
          
          # Create category directories and pages for each category
          mkdir -p category
          for category in $(grep -h -A5 "^categories:" _posts/*.md | grep "^-" | sed 's/^- //' | sort -u); do
            slug=$(echo "$category" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g')
            mkdir -p "category/$slug"
            echo "---" > "category/$slug/index.md"
            echo "layout: category" >> "category/$slug/index.md"
            echo "category: \"$category\"" >> "category/$slug/index.md"
            echo "title: $category Posts" >> "category/$slug/index.md"
            echo "permalink: /category/$slug/" >> "category/$slug/index.md"
            echo "---" >> "category/$slug/index.md"
          done
      - name: Build with Jekyll
        run: |
          # Build default (10 posts per page)
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
          
          # Copy site to preserve the default build
          cp -r _site _site_default
          
          # Build with 5 posts per page
          mkdir -p posts-5
          echo "---" > posts-5/index.md
          echo "layout: page" >> posts-5/index.md
          echo "title: All Posts" >> posts-5/index.md
          echo "pagination:" >> posts-5/index.md
          echo "  enabled: true" >> posts-5/index.md
          echo "  per_page: 5" >> posts-5/index.md
          echo "---" >> posts-5/index.md
          cat posts.md | tail -n +7 >> posts-5/index.md
          
          # Build with 25 posts per page  
          mkdir -p posts-25
          echo "---" > posts-25/index.md
          echo "layout: page" >> posts-25/index.md
          echo "title: All Posts" >> posts-25/index.md
          echo "pagination:" >> posts-25/index.md
          echo "  enabled: true" >> posts-25/index.md
          echo "  per_page: 25" >> posts-25/index.md
          echo "---" >> posts-25/index.md
          cat posts.md | tail -n +7 >> posts-25/index.md
          
          # Rebuild with all variations
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4